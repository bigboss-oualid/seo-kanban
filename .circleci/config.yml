# .circleci/config.yml
version: 2
jobs:
  build_analysis_and_test:
    environment:
    working_directory: ~/kanban
    docker:
      - image: circleci/php:7.4.9-node-browsers
    steps:
      - checkout
      - run:
          name: "Install apt"
          command: sudo apt update && sudo apt-get install -y rsync xsltproc
      #- run:
          #name: "Create Environment file"
          #command: mv .env.test .env

      # Download and cache composer dependencies
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run:
          name: "Install Composer Dependencies"
          command: |
            sudo composer self-update --2
            composer install -n --prefer-dist
            # Force pulling Simple PHPUnit dependencies to be able to cache them as well
            ./vendor/bin/simple-phpunit --version
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - ./vendor
      - run:
          name: "Run PHPUnit tests"
          command: |
            sudo vendor/bin/phpunit
  production_deploy:
    working_directory: ~/kanban
    docker:
      - image: circleci/php:7.4.9-node-browsers
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "81:b5:40:3b:41:b2:df:e4:d5:4e:6f:d3:46:a3:16:ec"
      - run:
          name:  "Install apt"
          command: sudo apt update && sudo apt-get install -y rsync

      - run:
          name: "Update Database connexion"
          command: |
            rm ./config/db_connection.php
            > ./config/db_connection.php
            echo APP_ENV=${DB_CONNECTION} >> ./config/db_connection.php
      - run:
          name: "Install Composer Dependencies"
          command: |
            sudo composer self-update --2
            composer install

      - run:
          name: "Add Production host to VM"
          command: ssh-keyscan -H $PRODUCTION_SERVER_IP >> ~/.ssh/known_hosts
      # Use Zero downtime deployment (switch an old folder with the current app version before posting code)
      - run:
          name: "Pre-deploy"
          command: |
            #Save server-path env. variable in new file & export to to server
            echo PRODUCTION_SERVER_PATH=$PRODUCTION_SERVER_PATH > ~/.server-path.txt && chmod -R 700 ~/.server-path.txt
            rsync -vzcSLhp ~/.server-path.txt $SERVER_USER@$PRODUCTION_SERVER_IP:~/
            ssh -t $SERVER_USER@$PRODUCTION_SERVER_IP < bin/deploy/pre_deploy.sh
      - run:
          name: "Deploy code"
          command: rsync -vzcrSLhp --exclude '.circleci' --exclude '.git' --exclude '.phpunit.result.cache' --exclude '*test*' --delete ~/kanban/ $SERVER_USER@$PRODUCTION_SERVER_IP:$PRODUCTION_SERVER_PATH/current
      - run:
          name: "Post Deploy"
          command:
            ssh -t $SERVER_USER@$PRODUCTION_SERVER_IP < config/deploy/deploy.sh
      - run:
          name: Set up testing git repository
          command: |
            git config --global user.email "oualid.boulatar@gmail.com"
            git config --global user.name "bigboss-oualid"
            git checkout production || git checkout -b production
            git merge ci/cd
            git add .
            git commit -m "ci/cd: deployment is successfully completed"
            git push origin production -f
workflows:
  version: 2
  deploy:
    jobs:
      - production_deploy:
          filters:
            branches:
              only: ci/cd